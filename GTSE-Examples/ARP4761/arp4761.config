root integration_main

configuration integration_main (
	
) extends integration::main::main.impl {
	wbs_impl => wbs_federated_conf,
	functional => functional_conf
} constraints {
	functional.decelerate == !functional::Decelerate::DecelerateAircraft.i1 requires wbs_impl.bscu.sub1.cmd == !impl::bscu::command.i1, 
	functional.decelerate == !functional::Decelerate::DecelerateAircraft.i2 requires wbs_impl.bscu.sub1.cmd == !impl::bscu::command.i2 
}

------------------------------
-- Functional Configuration --
------------------------------

configuration functional_conf (
	decelerate_opts : system functional::Decelerate::DecelerateAircraft.basic from (functional::Decelerate::DecelerateAircraft.i1, functional::Decelerate::DecelerateAircraft.i2),
	alert_opts : system functional::Alert::Alert.basic from (functional::Alert::Alert.lo_quality, functional::Alert::Alert.hi_quality),
	steering_opts: system functional::Steering::Steering.basic from (functional::Steering::Steering.i1, functional::Steering::Steering.i2, functional::Steering::Steering.i3),
	status_opts : system functional::Status::Status.basic from (functional::Status::Status.lo_quality, functional::Status::Status.hi_quality)
) extends functional::main::Aircraft.basic {
	decelerate => decelerate_opts,
	alert => alert_opts,
	steering => steering_opts,
	status => status_opts
}

-----------------------
-- WBS Configuration --
-----------------------
configuration wbs_federated_conf (
	pump_impl : system impl::pump::pump.generic from (impl::pump::pump.large, impl::pump::pump.small),
	wheel_conf_opts : system impl::wheel::wheel.i from (impl::wheel::wheel_one_input, impl::wheel::wheel_two_inputs)
) extends impl::wbs::wbs.federated{
	-- Choices made at lower levels / with sub-configurations 
	bscu => bscu_federated_conf,
	power => power_generic_conf with power_conf,
	
	-- Choices made at the level of the wbs package
	wheel => wheel_conf_opts with tire_brake_conf,
	blue_pump => pump_impl,
	green_pump => pump_impl,
	accumulator => pump_impl
} constraints {
	power.powerbus1 == !impl::power::powersource.large requires power.line1 == !impl::common::power.heavygauge,
	power.powerbus1 == !impl::power::powersource.systempower requires power.line1 == !impl::common::power.heavygauge,
	power.powerbus2 == !impl::power::powersource.large requires power.line2 == !impl::common::power.heavygauge,
	power.powerbus2 == !impl::power::powersource.systempower requires power.line2 == !impl::common::power.heavygauge,
	power.powerbus1.socket == power.line1,
	power.powerbus2.socket == power.line2,
	bscu.platform.power == bscu.platform.cpu1.power,
	bscu.platform.cpu2.power == bscu.platform.power
}

configuration tire_brake_conf (
	tire_impl : device impl::wheel::tire from (impl::wheel::tire.hi_quality, impl::wheel::tire.lo_quality),
	brake_impl : device impl::wheel::brake from (impl::wheel::brake.hi_quality, impl::wheel::brake.lo_quality)
) extends impl::wheel::wheel.i {
	tire => tire_impl,
	brake => brake_impl
}

configuration bscu_federated_conf (
	 
) extends impl::bscu::bscu.federated {
	sub1 => bscu_subsystem_generic_conf,
	sub2 => bscu_subsystem_generic_conf,
	platform => platform_federated_conf with platform_base_conf
}

configuration cpu_base_conf (
	power_bus : bus impl::common::power.generic from (impl::common::power.heavygauge, impl::common::power.lightgauge)
) extends impl::platform::cpu {
	power => power_bus
}

configuration platform_base_conf (
	power_bus : bus impl::common::power.generic from (impl::common::power.heavygauge, impl::common::power.lightgauge)
) extends impl::platform::platform {
	power => power_bus
}

configuration platform_federated_conf (
	power_budget : SEI::PowerBudget from (0.1W .. 300W),
	cpu_arch : processor impl::platform::cpu from (impl::platform::cpu.x86, impl::platform::cpu.x64, impl::platform::cpu.arm)
) extends impl::platform::platform.federated {
	cpu1.power#SEI::PowerBudget => power_budget,
	cpu2.power#SEI::PowerBudget => power_budget,
	cpu1 => cpu_arch with cpu_base_conf,
	cpu2 => cpu_arch with cpu_base_conf
} constraints {
	cpu1 == cpu2
}

configuration bscu_subsystem_generic_conf (
	mon_impl : process impl::bscu::monitor from (impl::bscu::monitor.i1, impl::bscu::monitor.i2),
	cmd_impl : process impl::bscu::command from (impl::bscu::command.i1, impl::bscu::command.i2)
) extends impl::bscu::bscu_subsystem.generic {
	mon => mon_impl,
	cmd => cmd_impl
}

configuration power_generic_conf (
	powerbus_impl : device impl::power::powersource from (impl::power::powersource.small, impl::power::powersource.large, impl::power::powersource.systempower)
) extends impl::power::power.generic {
	powerbus1 => powerbus_impl with powersource_conf,
	powerbus2 => powerbus_impl with powersource_conf
}
 
configuration powersource_conf (
	powersource_bus : bus impl::common::power.generic from (impl::common::power.heavygauge, impl::common::power.lightgauge)
) extends impl::power::powersource {
	socket => powersource_bus
}

configuration power_conf (
	line_bus : bus impl::common::power.generic from (impl::common::power.heavygauge, impl::common::power.lightgauge)
) extends impl::power::power {
	line1 => line_bus,
	line2 => line_bus
}

----------------------------
-- Independent constructs --
	
analyses {
	'org.osate.atsv.integration.property-totals',
	'org.osate.atsv.integration.power-consumption',
	'org.osate.atsv.integration.port-consistency',
	'org.osate.gtse.demo.braking-power'
}

outputs {
	Price : float > 1.0,
	ValidModel : float,
	InvalidReason : string,
	Weight : float > 1.0,
	powerbus1 : float,
	powerbus2 : float,
	BrakingPower : float
}